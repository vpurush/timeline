From 18b9c0969fcce176b1c93928593f638e2ae5c8c7 Mon Sep 17 00:00:00 2001
From: "Vijay, Purush" <Vijayaraghavan_Purushothaman@apple.com>
Date: Tue, 21 Mar 2017 14:42:08 +0530
Subject: [PATCH] initial version

---
 app/actions/main.js                           | 59 +++++++++++++++++++++++++++
 app/containerComponents/ShowTimeLine.js       | 26 ++++++++++++
 app/containerComponents/app.js                | 20 +++++++++
 app/index.html                                | 12 ++++++
 app/presentationComponents/timeLine.js        | 29 +++++++++++++
 app/presentationComponents/timeLine.scss      | 44 ++++++++++++++++++++
 app/presentationComponents/timeline-item.js   | 23 +++++++++++
 app/presentationComponents/timeline-item.scss |  6 +++
 app/reducers/main.js                          | 26 ++++++++++++
 package.json                                  | 34 +++++++++++++++
 webpack.config.js                             | 32 +++++++++++++++
 11 files changed, 311 insertions(+)
 create mode 100644 app/actions/main.js
 create mode 100644 app/containerComponents/ShowTimeLine.js
 create mode 100644 app/containerComponents/app.js
 create mode 100644 app/index.html
 create mode 100644 app/presentationComponents/timeLine.js
 create mode 100644 app/presentationComponents/timeLine.scss
 create mode 100644 app/presentationComponents/timeline-item.js
 create mode 100644 app/presentationComponents/timeline-item.scss
 create mode 100644 app/reducers/main.js
 create mode 100644 package.json
 create mode 100644 webpack.config.js

diff --git a/app/actions/main.js b/app/actions/main.js
new file mode 100644
index 0000000..f5bd6d3
--- /dev/null
+++ b/app/actions/main.js
@@ -0,0 +1,59 @@
+export const startTimelineFetch = () => {
+    return {
+        type: 'START_TIMELINE_FETCH'
+    };
+};
+
+export const receiveTimelineData = (data) => {
+    return {
+        type: 'RECEIVE_TIMELINE_DATA',
+        data: data
+    };
+};
+
+export const fetchTimelineData = () => {
+    console.log("fetchTimelineData");
+    return (dispatch, getState) => {
+        console.log("fetchTimelineData inner method");
+        dispatch(startTimelineFetch());
+        var promise = new Promise(function(resolve, reject){
+            var data = [
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'Badri joins apple'
+                },
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'Vijay joins apple'
+                },
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'Chandy joins apple'
+                },
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'Trio at bikes and barels'
+                },
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'Sathish\'s farewell'
+                },
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'At Spoonbill'
+                },
+                {
+                    dateTime: new Date().toDateString(),
+                    title: 'All three of them go to pondy'
+                }
+            ];
+
+            setTimeout(function(){
+                dispatch(receiveTimelineData(data));
+                resolve();
+            }, 1000);
+
+        });
+        return promise;
+    };
+};
\ No newline at end of file
diff --git a/app/containerComponents/ShowTimeLine.js b/app/containerComponents/ShowTimeLine.js
new file mode 100644
index 0000000..e50dd87
--- /dev/null
+++ b/app/containerComponents/ShowTimeLine.js
@@ -0,0 +1,26 @@
+var React = require('react');
+var connect = require('react-redux').connect;
+var TimeLine = require('../presentationComponents/timeLine.js');
+var fetchTimelineData = require('../actions/main.js').fetchTimelineData;
+
+const mapStateToProps = (state, ownProps) => {
+    console.log("map state to props", ownProps);
+
+    return {
+        List: state.TimeLineList
+    };
+};
+
+const mapDispatchToProps = (dispatch) => {
+    dispatch(fetchTimelineData()); 
+    return {
+
+    };
+};
+
+var ShowTimeLine = connect(
+    mapStateToProps,
+    mapDispatchToProps
+)(TimeLine);
+
+module.exports = ShowTimeLine;
\ No newline at end of file
diff --git a/app/containerComponents/app.js b/app/containerComponents/app.js
new file mode 100644
index 0000000..761bc98
--- /dev/null
+++ b/app/containerComponents/app.js
@@ -0,0 +1,20 @@
+var React = require('react');
+var ReactDOM = require('react-dom');
+var ShowTimeLine = require('./ShowTimeLine.js');
+var createStore = require('redux').createStore;
+var applyMiddleware = require('redux').applyMiddleware;
+var Provider = require('react-redux').Provider;
+var reducer = require('../reducers/main.js');
+var thunkMiddleware = require('redux-thunk').default;
+
+const store = createStore(
+                    reducer,
+                    applyMiddleware(thunkMiddleware)
+                );
+
+ReactDOM.render(
+    <Provider store={store}>
+        <ShowTimeLine store={store}></ShowTimeLine>
+    </Provider>,    
+    document.getElementById('app')
+);
\ No newline at end of file
diff --git a/app/index.html b/app/index.html
new file mode 100644
index 0000000..26c64a5
--- /dev/null
+++ b/app/index.html
@@ -0,0 +1,12 @@
+<html>
+
+<head>
+    <title> Timeline </title>
+</head>
+
+<body>
+    <div id="app"></div>
+    <!--<script type="text/javascript" src="app.js" ></script>-->
+</body>
+
+</html>
\ No newline at end of file
diff --git a/app/presentationComponents/timeLine.js b/app/presentationComponents/timeLine.js
new file mode 100644
index 0000000..50af2bb
--- /dev/null
+++ b/app/presentationComponents/timeLine.js
@@ -0,0 +1,29 @@
+require('./timeLine.scss');
+
+var React = require('react');
+var TimeLineItem = require('./timeline-item');
+
+
+var TimeLine = React.createClass({
+    render: function(){
+        var html;
+
+        html = (
+            <div className="container">
+            {this.props.List.map((itm, i) => {
+                return (
+                    <div key={i} className="item">
+                        <div className="circle"></div>
+                        <div className="date-time">{itm.dateTime}</div>
+                        <div className="line"></div>
+                        <TimeLineItem key={Math.random()} title={itm.title} img={itm.img} desc={itm.desc}> </TimeLineItem>
+                    </div>
+                );
+            })}
+            </div>
+        );
+        return html;
+    }
+});
+
+module.exports = TimeLine;
\ No newline at end of file
diff --git a/app/presentationComponents/timeLine.scss b/app/presentationComponents/timeLine.scss
new file mode 100644
index 0000000..f1f402d
--- /dev/null
+++ b/app/presentationComponents/timeLine.scss
@@ -0,0 +1,44 @@
+
+
+.item{
+    padding-top: 25px;
+    padding-bottom: 25px;
+    position: relative;
+
+    .circle{
+        height: 35px;
+        width: 35px;
+        border-radius: 50px;
+        border-color: lightgray;
+        border-width: 2px;
+        border-style: solid;
+        display: inline-block;
+
+    }
+
+    .date-time{
+        display: inline-block;
+        width: calc(100% - 65px);
+        color: lightgray;
+        height: 35px;
+        vertical-align: text-bottom;
+        padding-left: 25px;
+    }
+
+    .line{
+        display: inline-block;
+        height: calc(100% - 40px);
+        border-left: 1px solid lightgray;
+        padding-left: 60px;
+        margin-left: 20px;
+        position: absolute;
+        left: 0px;
+        top: 65px;
+    }
+
+    &:hover{
+        .circle{
+            background-color: lightblue;
+        }
+    }
+}
\ No newline at end of file
diff --git a/app/presentationComponents/timeline-item.js b/app/presentationComponents/timeline-item.js
new file mode 100644
index 0000000..48b55b5
--- /dev/null
+++ b/app/presentationComponents/timeline-item.js
@@ -0,0 +1,23 @@
+require('./timeline-item.scss');
+var React = require('react');
+//var $ = require('jquery');
+
+var TimeLineItem = React.createClass({
+    render: function(){
+        var html;
+        var title, img, desc;
+        if(this.props.title){
+            title = <h3>{this.props.title}</h3>;
+        }
+        if(this.props.img){
+            img = <img src={this.props.img} />;
+        }
+        if(this.props.desc){
+            desc = <span>{this.props.desc}</span>;
+        }
+        html = (<div className="timeline-item">{title}{img}{desc}</div>);
+        return html;
+    }
+});
+
+module.exports = TimeLineItem;
\ No newline at end of file
diff --git a/app/presentationComponents/timeline-item.scss b/app/presentationComponents/timeline-item.scss
new file mode 100644
index 0000000..804630a
--- /dev/null
+++ b/app/presentationComponents/timeline-item.scss
@@ -0,0 +1,6 @@
+.timeline-item{
+    display: inline-block;
+    width: calc(100% - 125px);
+    padding-left: 60px;
+    vertical-align: top;
+}
\ No newline at end of file
diff --git a/app/reducers/main.js b/app/reducers/main.js
new file mode 100644
index 0000000..a652715
--- /dev/null
+++ b/app/reducers/main.js
@@ -0,0 +1,26 @@
+var combineReducers = require('redux').combineReducers;
+
+var TimeLineList = function(prevState, action){
+    console.log("timelinelist", prevState);
+    if(action.type == "RECEIVE_TIMELINE_DATA"){
+        return action.data;
+    }else{
+        return prevState || [];
+    }
+};
+
+var FetchingTimeLineList = function(prevState, action){
+    if(action.type == "START_TIMELINE_FETCH"){
+        return true;
+    }else if(action.type == "RECEIVE_TIMELINE_DATA"){
+        return false;
+    }
+    return prevState || false;
+};
+
+var reducer = combineReducers({
+    TimeLineList,
+    FetchingTimeLineList
+});
+
+module.exports = reducer;
\ No newline at end of file
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..d4e0ed1
--- /dev/null
+++ b/package.json
@@ -0,0 +1,34 @@
+{
+  "name": "timeline",
+  "version": "1.0.0",
+  "description": "timeline",
+  "main": "/app/app.js",
+  "scripts": {
+    "build": "webpack; webpack --devtool source-map",
+    "start": "webpack-dev-server"
+  },
+  "author": "",
+  "license": "ISC",
+  "dependencies": {
+    "babel-polyfill": "^6.23.0",
+    "isomorphic-fetch": "^2.2.1",
+    "jquery": "^3.1.1",
+    "react": "^15.4.2",
+    "react-dom": "^15.4.2",
+    "react-redux": "^5.0.3",
+    "redux": "^3.6.0",
+    "redux-thunk": "^2.2.0"
+  },
+  "devDependencies": {
+    "babel-core": "^6.22.1",
+    "babel-loader": "^6.2.10",
+    "babel-preset-react": "^6.22.0",
+    "css-loader": "^0.27.3",
+    "html-webpack-plugin": "^2.26.0",
+    "node-sass": "^4.5.0",
+    "sass-loader": "^6.0.3",
+    "style-loader": "^0.13.2",
+    "webpack": "^2.2.1",
+    "webpack-dev-server": "^1.16.2"
+  }
+}
diff --git a/webpack.config.js b/webpack.config.js
new file mode 100644
index 0000000..dc5e4ee
--- /dev/null
+++ b/webpack.config.js
@@ -0,0 +1,32 @@
+var HTMLWebpackPlugin = require('html-webpack-plugin');
+var HTMLWebpackPluginConfig = new HTMLWebpackPlugin({
+    template: __dirname + '/app/index.html',
+    filename: 'index.html'
+});
+
+module.exports = {
+    entry: __dirname + '/app/containerComponents/app.js',
+    module:{
+        loaders: [
+            {
+                test: /\.js$/,
+                exclude: /node_modules/,
+                loader: 'babel-loader?retainLines=true'
+            },
+            {
+                test: /\.scss$/,
+                exclude: /node_modules/,
+                loaders: ['style-loader', 'css-loader?sourceMap', 'sass-loader?sourceMap']
+            }
+        ]
+    },
+    devtool: '#eval-source-map',
+    output:{
+        filename: 'transformed.js',
+        path: __dirname + '/dist/'
+    },
+    plugins: [HTMLWebpackPluginConfig],
+    node: {
+        fs: "empty"
+    }
+};
\ No newline at end of file
-- 
2.2.1

From 9a426afaf7a865e37c7f2ba39305b85a86116e62 Mon Sep 17 00:00:00 2001
From: "Vijay, Purush" <Vijayaraghavan_Purushothaman@apple.com>
Date: Tue, 21 Mar 2017 14:42:43 +0530
Subject: [PATCH] git ignore added

---
 .babelrc   | 3 +++
 .gitignore | 2 ++
 2 files changed, 5 insertions(+)
 create mode 100644 .babelrc
 create mode 100644 .gitignore

diff --git a/.babelrc b/.babelrc
new file mode 100644
index 0000000..ed0009a
--- /dev/null
+++ b/.babelrc
@@ -0,0 +1,3 @@
+{
+    "presets": ["react"]
+}
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..d1346c8
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+**/node_modules/*
+**/dist/*
-- 
2.2.1


